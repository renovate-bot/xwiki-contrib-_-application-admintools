<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="Admin.Export" locale="">
  <web>Admin</web>
  <name>Export</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1384949611000</creationDate>
  <parent>Admin.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1384949708000</date>
  <contentUpdateDate>1384949708000</contentUpdateDate>
  <version>1.1</version>
  <title>Export</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
{{html clean="false" wiki="false"}}
#set($action = $request.action)
#if ($action == "getdocs")
$response.setContentType("text/xml")
#set($space = $request.spacename)
&lt;response&gt;
  #set($docs = $xwiki.searchDocuments("where doc.space='$escapetool.sql($space)' order by doc.date desc"))
  #foreach ($docname in $docs)
    &lt;value&gt;$escapetool.xml("${docname}")&lt;/value&gt;
  #end
&lt;/response&gt;
#elseif ($action == "getPackageList")
  $response.setContentType("text/xml")
  #set($alist = $doc.getAttachmentList())
&lt;response&gt;
  #foreach ($oAttach in $alist)
    &lt;value&gt;$oAttach.getFilename()&lt;/value&gt;
  #end
&lt;/response&gt;
#elseif ($action == "preexport")
  #set($ToExport = $request.getParameterValues("toExport"))
  #set($session = $request.getSession(false))
  #set($ok = $session.setAttribute("exportdata", $ToExport))
OK
#elseif ($action == "export")
  #set($session = $request.getSession(false))
  #set($ToExport = $session.getAttribute("exportdata"))
  #set($withHistory = $request.withHistory)
  #set($author = $request.author)
  #set($description = $request.description)
  #set($licence = $request.licence)
  #set($version = $request.version)
  #set($packageName = $request.packageName)

  #set($export = $xwiki.package)

  #if ($withHistory=="true")
    $export.setWithVersions(true)
  #else
    $export.setWithVersions(false)
  #end
  #if ($author)
    $export.setAuthorName($author)
  #end
  #if ($description)
    $export.setDescription($description)
  #end

  #if ($licence)
    $export.setLicence($licence)
  #end

  #if ($version)
    $export.setVersion($version)
  #end

  $export.setName($packageName)
  #foreach ($itemexp in $ToExport)
    $export.add($itemexp, 0)
  #end
  $export.export()
#else

&lt;div id="exportApp"&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class="td-docSelectorColumn"&gt;&lt;h3 id="firstColumnTitle"&gt;Your Wiki&lt;/h3&gt;
&lt;span id="spaceSelectorEl"&gt;
 Select a Space:
  #set($spaces = $xwiki.getSpaces())
  &lt;select name="spaceSelector" id="spaceSelector"&gt;
  &lt;option value="---"&gt;---&lt;/option&gt;
  #foreach ($space in $spaces)
    &lt;option value="$escapetool.html($space)"&gt;$escapetool.html($space)&lt;/option&gt;
  #end
  &lt;/select&gt;
  &lt;br /&gt;
  #set($script = $escapetool.xml($xwiki.getURL("Admin.ExportSpaceSuggest", "get", "xpage=plain&amp;outputSyntax=plain")))
 &lt;form action="" onsubmit="setSpace(this.space.value); return false;"&gt;
 Search space: &lt;input type="text" name="space" value="" size="20"  onfocus="new XWiki.widgets.Suggest(this, {script:'${script}&amp;amp;', varname: 'input', seps:'', offsety: 13});" /&gt;
  &lt;input type="submit" class="button btn" value="Go" /&gt;
 &lt;/form&gt;
  &lt;br /&gt;
&lt;span class="selectDocsActions"&gt;Select &lt;a onclick="selectItems('checkedDoc', false);" class="Exportlink btn btn-default"&gt;none&lt;/a&gt;, &lt;a onclick="selectItems('checkedDoc', true);" class="Exportlink btn btn-default"&gt;all&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/td&gt;
&lt;td class="td-selectedColumn"&gt;&lt;h3 id="secondColumnTitle"&gt;Your Package&lt;/h3&gt;
&lt;span class="selectDocsActions"&gt;Select &lt;a onclick="selectItems('selCheckedDoc', false);" class="Exportlink btn btn-default"&gt;none&lt;/a&gt;, &lt;a onclick="selectItems('selCheckedDoc', true);" class="Exportlink btn btn-default"&gt;all&lt;/a&gt;&lt;/span&gt;
&lt;/td&gt;
&lt;td class="td-packageColumn"&gt;
&lt;h3 id="thirdColumnTitle"&gt;Package Info&lt;/h3&gt;
&lt;/td&gt;
&lt;/tr&gt;
## ROW 2
&lt;tr&gt;
&lt;td class="td-docSelectorColumn"&gt;
&lt;div id="docSelectorColumn"&gt;
  &lt;div id="spaceDocs"&gt;
  &lt;span id="noSelectedSpace"&gt;&lt;br /&gt;&lt;br /&gt;Start by choosing a space to list documents&lt;/span&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;td class="td-selectedColumn"&gt;
&lt;div id="selectedColumn"&gt;
  &lt;div id="spaceDocs"&gt;
  &lt;table&gt;
   &lt;tbody id="selectedDocsTable"&gt;
   &lt;/tbody&gt;
  &lt;/table&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;td class="td-packageColumn"&gt;
&lt;label for="appName"&gt;&lt;i&gt;Package Name&lt;/i&gt;&lt;/label&gt;&lt;br /&gt;&lt;input type="text" name="appName" id="appName" value="package"&gt;&lt;br /&gt;&lt;br /&gt;
&lt;label for="appDesc"&gt;&lt;i&gt;Description&lt;/i&gt;&lt;/label&gt;&lt;br /&gt;&lt;textarea name="appDesc" id="appDesc"&gt;&lt;/textarea&gt;&lt;br /&gt;&lt;br /&gt;
&lt;label for="appLicence"&gt;&lt;i&gt;Licence&lt;/i&gt;&lt;/label&gt;&lt;br /&gt;&lt;input type="text" name="appLicence" id="appLicence" value="LGPL"&gt;&lt;br /&gt;&lt;br /&gt;
&lt;label for="appAuthor"&gt;&lt;i&gt;Author&lt;/i&gt;&lt;/label&gt;&lt;br /&gt;&lt;input type="text" name="appAuthor" id="appAuthor" value="$xcontext.user"&gt;&lt;br /&gt;&lt;br /&gt;
&lt;label for="appVersion"&gt;&lt;i&gt;Version&lt;/i&gt;&lt;/label&gt;&lt;br /&gt;&lt;input type="text" name="appVersion" id="appVersion" value=""&gt;&lt;br /&gt;&lt;br /&gt;
&lt;span id="historyEls"&gt;
&lt;label for="appWithHistory"&gt;&lt;i&gt;Add history&lt;/i&gt;&lt;input type="checkbox" name="appWithHistory" id="appWithHistory" value="true"&gt;&lt;/label&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
## ROW 3
&lt;tr&gt;
&lt;td class="td-docSelectorColumn" style="text-align: center;"&gt;&lt;input type="button" onclick="addDocs();" id="bttAdd" value="Add to my package &amp;gt;&amp;gt;" class="button" /&gt;&lt;/td&gt;
&lt;td class="td-selectedColumn" style="text-align: center;"&gt;&lt;input type="button" onclick="deleteDocs();" id="bttRemove" value="&amp;lt;&amp;lt; Remove from my package" class="button" /&gt;&lt;/td&gt;
&lt;td class="td-packageColumn" style="text-align: center;"&gt;&lt;input type="button" id="bttExport" onclick="bttExport()" value="Export" class="button" /&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
#end
{{/html}}
{{/velocity}}</content>
  <object>
    <name>Admin.Export</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>d1f55fca-db4d-4b64-8f2c-cbef11a2f908</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>Ajax.XWikiRequest = Class.create(Ajax.Request, {
    initialize: function($super, space, docName, options) {
    this.transport = Ajax.getTransport();

    options = Object.clone(options);
    var onComplete = options.onComplete || Prototype.emptyFunction;
    options.onComplete = (function() {
       this.returnValue(onComplete);
    }).bind(this);

    $super(this.generateUrl(space, docName), options);
  },
  generateUrl: function(space, docName){
        return new XWiki.Document(docName, space).getURL('get');
  },
  returnValue: function(callBack) {
    if (callBack)
        callBack(this);
    else
        alert("error, callback");
  }
});

    //declaring the class
    var SelectWatcher = Class.create();

    //defining the rest of the class implementation
    SelectWatcher.prototype = {

	   initialize: function(selBox, callBack) {
			this.selBox = $(selBox);
			//assigning our method to the event
			this.selBox.onchange = callBack.bindAsEventListener(this);
	   }
    };
    
    // create the watcher
    function initWatcher() {
       new SelectWatcher("spaceSelector", selectOptionCallBack);
    }
    (XWiki &amp;&amp; XWiki.domIsLoaded &amp;&amp; initWatcher()) || document.observe("xwiki:dom:loaded", initWatcher);


      function selectOptionCallBack(evt)
      {
          setSpace(this.selBox.options[this.selBox.selectedIndex].value);
      }
      
      function setSpace(space)
      {
         var pars = { action: 'getdocs', spacename: space, xpage: 'rdf' };
         var myAjax = new Ajax.XWikiRequest( "Admin", "Export", {method: 'get', parameters: pars, onComplete: showDocs} );
      }

      function showDocs(res)
      {
        var tableName = "listTable";
        var tableEl = $(tableName);
        if (tableEl)
          Element.remove(tableName);
        createTable(tableName, "spaceDocs");
        var xml = res.transport.responseXML;
        var docNodes = xml.getElementsByTagName("value");
        var noSelectedEl = $("noSelectedSpace");
        if (noSelectedEl&amp;&amp;noSelectedEl.parentNode)
         noSelectedEl.parentNode.removeElement(noSelectedEl);
        for (var i = 0; i &lt; docNodes.length; i++)
        {
          insertTableRow(tableName, docNodes[i].firstChild.data, "doc");
        }
      }

       function showImportList()
       {
         var pars = "action=getPackageList&amp;xpage=rdf";
         var myAjax = new Ajax.XWikiRequest( "Admin", "Export", {method: 'get', parameters: pars, onComplete: showPackageList} );
       }

      function showPackageList(res)
      {
        var tableName = "listTable";
        var tableEl = $(tableName);
        if (tableEl)
          Element.remove(tableName);
        createTable(tableName, "spaceDocs");
        var xml = res.responseXML;
        var packageNodes = xml.getElementsByTagName("value");
        for (var i = 0; i &lt; packageNodes.length; i++)
        {
          insertTableRow(tableName, packageNodes[i].firstChild.data, "pack");
        }
      }


      function createTable(id, parent){
         $(parent).innerHTML = "&lt;table id=" + id + "&gt;&lt;/table&gt;";
      }


      function insertTableRow(id, name, type) {
         name = name.escapeHTML().replace(/"/g,'&amp;quot;').replace(/'/g,'&amp;#39;');
         if (type == "doc")
           new Insertion.Bottom(id, "&lt;tr&gt;&lt;td&gt;" + name + "&lt;/td&gt;&lt;td&gt;&lt;input type='checkbox' value='"+name+"' class='checkedDoc'/&gt;&lt;/td&gt;&lt;/tr&gt;");
         else if (type == "pack")
           new Insertion.Bottom(id, "&lt;tr&gt;&lt;td&gt;&lt;a onclick='selectPackage(\""+ name +"\")' class='Exportlink'&gt;" + name + "&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;");
      }

      function insertNewSelectedDoc(id, value)
      {
         insertNewDoc(id, value, 0)
      }

      function insertNewDoc(id, value)
      {
         value = value.escapeHTML().replace(/"/g,'&amp;quot;').replace(/'/g,'&amp;#39;');
         new Insertion.Bottom(id, "&lt;tr class='selCheckedTR' id='tr_" + value + "'&gt;&lt;td&gt;&lt;input type='checkBox' value='" + value + "' class='selCheckedDoc' /&gt;&lt;span id='" + value + "' class='exportDocName'&gt;" + value + "&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;");
      }

      function deleteDocs()
      {
        var docs = document.getElementsByClassName("selCheckedDoc");
        var i;
        for (i = docs.length-1; i &gt;= 0; i--)
         {
             var doc = docs[i];
             if (doc.checked)
               Element.remove(doc.parentNode.parentNode);
         }
      }


      function addDocs()
      {
         var docs = document.getElementsByClassName("checkedDoc");
         var i;
         for (i = 0; i &lt; docs.length; i++)
           {
             var doc = docs[i];
             if (doc.checked == true)
              insertNewSelectedDoc("selectedDocsTable", doc.value)
           }
      }

      var exporturl = "";

      function bttExport()
      {
         var docs = document.getElementsByClassName("exportDocName");
         var i;
         // url used after the post call is made to post the list of pages
         exporturl = "?action=export&amp;withHistory=" + $F("appWithHistory") + "&amp;version=" + $F("appVersion") + "&amp;author=" + $F("appAuthor") + "&amp;description=" + $F("appDesc") + "&amp;licence=" + $F("appLicence") + "&amp;packageName=" + $F("appName");

         var pars = "action=preexport&amp;xpage=rdf";
         for (i = 0; i &lt; docs.length; i++)
         {
             var docname = docs[i].innerHTML;
             pars = pars + "&amp;toExport=" + encodeURIComponent(docname);
         }
         var myAjax = new Ajax.XWikiRequest( "Admin", "Export", {method: 'post', parameters: pars, onComplete: bttExportComplete } );
      }

      function bttExportComplete(xmlResponse) 
      {
         window.location = exporturl;
      }

      function selectItems(classId, selected)
      {
         var docs = document.getElementsByClassName(classId);
         var i;
         for (i = 0; i &lt; docs.length; i++)
           {
             var doc = docs[i];
             doc.checked = selected;
           }
      }

      function getXmlValue(tag, xml)
      {
        var nodes = xml.getElementsByTagName(tag);
        if (nodes.length &gt; 0 &amp;&amp; nodes[0].firstChild)
          return nodes[0].firstChild.data;
        else
          return "";
      }</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
  <object>
    <name>Admin.Export</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>443ba299-92f2-48c6-b8e7-922614a31eb6</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>#exportApp table {
  width: 100%;
  border-color: blue;
  border-spacing: 0;
}
#exportApp table tr td.td-docSelectorColumn,
#exportApp table tr td.td-selectedColumn,
#exportApp table tr td.td-packageColumn {
  vertical-align: top;
}

#spaceDocs, #selectedDocs {
  height: 400px;
  overflow-y: scroll;
}

#exportApp h3 {
  text-align: center;
}</code>
    </property>
    <property>
      <name>export rows styling</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
</xwikidoc>
