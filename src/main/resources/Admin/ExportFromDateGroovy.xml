<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="Admin.ExportFromDateGroovy" locale="">
  <web>Admin</web>
  <name>ExportFromDateGroovy</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1543083013000</creationDate>
  <parent>Admin.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1543083013000</date>
  <contentUpdateDate>1543083013000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>plain/1.0</syntaxId>
  <hidden>true</hidden>
  <content>
import com.xpn.xwiki.*;
import com.xpn.xwiki.plugin.packaging.*;
import org.apache.commons.lang.StringUtils;

public class Test3 {

def result = ""

public addToResult(str) {
  result = "${result}${str}\n";
} 

public String export(context, xwiki, request, response) {
 result = "";
 addToResult("Starting export")
 addToResult("Creating package")
 def pack = new Package()
 if (request.versions=="1")
  pack.setWithVersions(true)
 else
  pack.setWithVersions(false)
 if (request.backup=="1")
  pack.setBackupPack(true)
 else
  pack.setBackupPack(false)

 addToResult("Adding documents")
 def sql = ""
 if (request.date!="") {
  def sqldate = "doc.date&gt;'$request.date'"
  if (sql=="")
   sql += "where ${sqldate}"
  else
   sql += " and ${sqldate}" 
 }
 if (request.space!="") {
  def spacelist1 = StringUtils.split(request.space," ,")
  def spacelist = StringUtils.join(spacelist1,"','")
  def sqlspace = "doc.space in ('${spacelist}')"
  if (sql=="")
   sql += "where ${sqlspace}"
  else
   sql += " and ${sqlspace}" 
 }

 addToResult(sql);
 def start = 0
 def nb = 0
 if (request.start) {
   start = xwiki.parseInt(request.start)
   if (request.end) {
    nb = xwiki.parseInt(request.end) - start + 1
   }
 }
 for(docName in xwiki.searchDocuments(sql, nb, start)){
  addToResult("* ${docName}")
  if (request.confirm)
   pack.add(xwiki.getDocument(docName).document, 0, context.context)
 }

 if (request.confirm) {
   try {
    response.setContentType("application/xwiki")
    pack.export(response.getOutputStream(), context.context)
    context.setFinished(true)
   } catch (Exception e) {
    addToResult("Error exporting")
    addToResult(e.getMessage())
   }
   addToResult("Finished.")
 }
 return result;
}

}</content>
</xwikidoc>
